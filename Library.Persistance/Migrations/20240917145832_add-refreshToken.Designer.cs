// <auto-generated />
using System;
using Library.DataAccess.DataBase.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library.DataAccess.Migrations
{
    [DbContext(typeof(LibraryDBContext))]
    [Migration("20240917145832_add-refreshToken")]
    partial class addrefreshToken
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.AccessGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.AccessGroupPermission", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("GroupId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("AccessGroupPermission");

                    b.HasData(
                        new
                        {
                            GroupId = 1,
                            PermissionId = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 1,
                            PermissionId = 3,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 1,
                            PermissionId = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 1,
                            PermissionId = 4,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 2,
                            PermissionId = 4,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.AuthorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            Birthday = new DateTime(2004, 9, 17, 14, 58, 32, 235, DateTimeKind.Utc).AddTicks(7644),
                            Country = "Belarus",
                            FirstName = "name0",
                            LastName = "LastName0"
                        },
                        new
                        {
                            Id = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            Birthday = new DateTime(1980, 9, 17, 14, 58, 32, 235, DateTimeKind.Utc).AddTicks(7683),
                            Country = "Belarus",
                            FirstName = "name1",
                            LastName = "LastName1"
                        },
                        new
                        {
                            Id = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            Birthday = new DateTime(1982, 9, 17, 14, 58, 32, 235, DateTimeKind.Utc).AddTicks(7687),
                            Country = "Belarus",
                            FirstName = "name2",
                            LastName = "LastName2"
                        },
                        new
                        {
                            Id = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            Birthday = new DateTime(1932, 9, 17, 14, 58, 32, 235, DateTimeKind.Utc).AddTicks(7692),
                            Country = "Belarus",
                            FirstName = "name3",
                            LastName = "LastName3"
                        },
                        new
                        {
                            Id = new Guid("399bc81f-b2cb-45d3-a570-fe21db2d7db2"),
                            Birthday = new DateTime(2007, 9, 17, 14, 58, 32, 235, DateTimeKind.Utc).AddTicks(7695),
                            Country = "Belarus",
                            FirstName = "name4",
                            LastName = "LastName4"
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.BookEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uuid");

                    b.Property<int>("BookType")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ClientId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ReturnTo")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("TakenAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ClientId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4253c174-5c9b-45d8-9e6b-b3ebd86a3f3b"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "4253c174-5c9b-45d8-9e6b-b3ebd86a3f3b",
                            Genre = "0",
                            ISBN = "9791766847886",
                            Title = "4253c174-5c9b-45d8-9e6b-b3ebd86a3f3b"
                        },
                        new
                        {
                            Id = new Guid("792cae18-4537-4291-aeae-857bd6e51225"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "792cae18-4537-4291-aeae-857bd6e51225",
                            Genre = "1",
                            ISBN = "9793494573631",
                            Title = "792cae18-4537-4291-aeae-857bd6e51225"
                        },
                        new
                        {
                            Id = new Guid("4b24d71d-89ab-486a-8ffc-5425a6d46d5b"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "4b24d71d-89ab-486a-8ffc-5425a6d46d5b",
                            Genre = "2",
                            ISBN = "9795259256063",
                            Title = "4b24d71d-89ab-486a-8ffc-5425a6d46d5b"
                        },
                        new
                        {
                            Id = new Guid("aefae8d0-503d-499f-8b86-aabb9ed30c7c"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "aefae8d0-503d-499f-8b86-aabb9ed30c7c",
                            Genre = "3",
                            ISBN = "9793609845103",
                            Title = "aefae8d0-503d-499f-8b86-aabb9ed30c7c"
                        },
                        new
                        {
                            Id = new Guid("22cac5d3-c71e-4bb3-b434-dc80561b3a46"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "22cac5d3-c71e-4bb3-b434-dc80561b3a46",
                            Genre = "4",
                            ISBN = "9795061346402",
                            Title = "22cac5d3-c71e-4bb3-b434-dc80561b3a46"
                        },
                        new
                        {
                            Id = new Guid("342deb18-539c-4907-8e75-5003db2943d1"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "342deb18-539c-4907-8e75-5003db2943d1",
                            Genre = "5",
                            ISBN = "9787889028820",
                            Title = "342deb18-539c-4907-8e75-5003db2943d1"
                        },
                        new
                        {
                            Id = new Guid("7deff246-dcc2-48c7-a18b-f769aa9854fa"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "7deff246-dcc2-48c7-a18b-f769aa9854fa",
                            Genre = "6",
                            ISBN = "9787779733292",
                            Title = "7deff246-dcc2-48c7-a18b-f769aa9854fa"
                        },
                        new
                        {
                            Id = new Guid("b61d1ed3-781d-4e86-be72-9de09a888818"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "b61d1ed3-781d-4e86-be72-9de09a888818",
                            Genre = "7",
                            ISBN = "9792849866985",
                            Title = "b61d1ed3-781d-4e86-be72-9de09a888818"
                        },
                        new
                        {
                            Id = new Guid("5c8a29c8-c29b-4a18-9fc2-10dce0345225"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "5c8a29c8-c29b-4a18-9fc2-10dce0345225",
                            Genre = "8",
                            ISBN = "9792850527141",
                            Title = "5c8a29c8-c29b-4a18-9fc2-10dce0345225"
                        },
                        new
                        {
                            Id = new Guid("c5b360e0-953d-46b8-ac86-e9d93d9bc67d"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "c5b360e0-953d-46b8-ac86-e9d93d9bc67d",
                            Genre = "9",
                            ISBN = "9786578373166",
                            Title = "c5b360e0-953d-46b8-ac86-e9d93d9bc67d"
                        },
                        new
                        {
                            Id = new Guid("976ebbb9-f93b-44c4-856c-976015a35c2b"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "976ebbb9-f93b-44c4-856c-976015a35c2b",
                            Genre = "0",
                            ISBN = "9783831600137",
                            Title = "976ebbb9-f93b-44c4-856c-976015a35c2b"
                        },
                        new
                        {
                            Id = new Guid("2ed3c307-e9c5-4f3c-9d0c-b04567feadd0"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "2ed3c307-e9c5-4f3c-9d0c-b04567feadd0",
                            Genre = "1",
                            ISBN = "9780827689985",
                            Title = "2ed3c307-e9c5-4f3c-9d0c-b04567feadd0"
                        },
                        new
                        {
                            Id = new Guid("5c8df265-039a-40bf-b539-6cbdf937cadf"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "5c8df265-039a-40bf-b539-6cbdf937cadf",
                            Genre = "2",
                            ISBN = "9788627587814",
                            Title = "5c8df265-039a-40bf-b539-6cbdf937cadf"
                        },
                        new
                        {
                            Id = new Guid("554f61ed-224a-4440-9b35-5876a4d98315"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "554f61ed-224a-4440-9b35-5876a4d98315",
                            Genre = "3",
                            ISBN = "9793346374287",
                            Title = "554f61ed-224a-4440-9b35-5876a4d98315"
                        },
                        new
                        {
                            Id = new Guid("a9a4f485-1519-4813-8a1c-8b76d39e0200"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "a9a4f485-1519-4813-8a1c-8b76d39e0200",
                            Genre = "4",
                            ISBN = "9782769516190",
                            Title = "a9a4f485-1519-4813-8a1c-8b76d39e0200"
                        },
                        new
                        {
                            Id = new Guid("056fd445-fa2c-480d-a50a-3b4a7edc5cf1"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "056fd445-fa2c-480d-a50a-3b4a7edc5cf1",
                            Genre = "5",
                            ISBN = "9789241604291",
                            Title = "056fd445-fa2c-480d-a50a-3b4a7edc5cf1"
                        },
                        new
                        {
                            Id = new Guid("f4fa4033-4348-4318-ae73-f8b5cfb34a02"),
                            AuthorId = new Guid("399bc81f-b2cb-45d3-a570-fe21db2d7db2"),
                            BookType = 0,
                            Description = "f4fa4033-4348-4318-ae73-f8b5cfb34a02",
                            Genre = "6",
                            ISBN = "9788670112605",
                            Title = "f4fa4033-4348-4318-ae73-f8b5cfb34a02"
                        },
                        new
                        {
                            Id = new Guid("b8380f49-30f1-4c07-89a3-47f1c6a0109d"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "b8380f49-30f1-4c07-89a3-47f1c6a0109d",
                            Genre = "7",
                            ISBN = "9785551218463",
                            Title = "b8380f49-30f1-4c07-89a3-47f1c6a0109d"
                        },
                        new
                        {
                            Id = new Guid("b969f209-fdb7-4bdd-9853-96457cf51751"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "b969f209-fdb7-4bdd-9853-96457cf51751",
                            Genre = "8",
                            ISBN = "9792441084725",
                            Title = "b969f209-fdb7-4bdd-9853-96457cf51751"
                        },
                        new
                        {
                            Id = new Guid("b0658308-fffb-4961-9e89-3495a8cbfe04"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "b0658308-fffb-4961-9e89-3495a8cbfe04",
                            Genre = "9",
                            ISBN = "9781060496927",
                            Title = "b0658308-fffb-4961-9e89-3495a8cbfe04"
                        },
                        new
                        {
                            Id = new Guid("77b656cd-fa80-467d-a3a4-2fee9d82eadf"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "77b656cd-fa80-467d-a3a4-2fee9d82eadf",
                            Genre = "0",
                            ISBN = "9797426435387",
                            Title = "77b656cd-fa80-467d-a3a4-2fee9d82eadf"
                        },
                        new
                        {
                            Id = new Guid("66a47e33-58db-4fb1-a451-1237ac4638d2"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "66a47e33-58db-4fb1-a451-1237ac4638d2",
                            Genre = "1",
                            ISBN = "9784167055042",
                            Title = "66a47e33-58db-4fb1-a451-1237ac4638d2"
                        },
                        new
                        {
                            Id = new Guid("aba2d10c-290e-4873-8db8-d6f68b6e8efc"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "aba2d10c-290e-4873-8db8-d6f68b6e8efc",
                            Genre = "2",
                            ISBN = "9785126421724",
                            Title = "aba2d10c-290e-4873-8db8-d6f68b6e8efc"
                        },
                        new
                        {
                            Id = new Guid("419fbcf7-8608-417c-b37c-bd2a4e8077be"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "419fbcf7-8608-417c-b37c-bd2a4e8077be",
                            Genre = "3",
                            ISBN = "9799466597360",
                            Title = "419fbcf7-8608-417c-b37c-bd2a4e8077be"
                        },
                        new
                        {
                            Id = new Guid("d97dec9b-f813-4832-9943-6d5a4d78dddb"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "d97dec9b-f813-4832-9943-6d5a4d78dddb",
                            Genre = "4",
                            ISBN = "9786671108986",
                            Title = "d97dec9b-f813-4832-9943-6d5a4d78dddb"
                        },
                        new
                        {
                            Id = new Guid("f01710b2-80a1-43ef-850e-641af06f334c"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "f01710b2-80a1-43ef-850e-641af06f334c",
                            Genre = "5",
                            ISBN = "9793015510442",
                            Title = "f01710b2-80a1-43ef-850e-641af06f334c"
                        },
                        new
                        {
                            Id = new Guid("20d8aa12-048f-4913-b1c4-2efb38bdc1b5"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "20d8aa12-048f-4913-b1c4-2efb38bdc1b5",
                            Genre = "6",
                            ISBN = "9789911633033",
                            Title = "20d8aa12-048f-4913-b1c4-2efb38bdc1b5"
                        },
                        new
                        {
                            Id = new Guid("0c082423-8389-406c-9ad7-e9af9cedada4"),
                            AuthorId = new Guid("399bc81f-b2cb-45d3-a570-fe21db2d7db2"),
                            BookType = 0,
                            Description = "0c082423-8389-406c-9ad7-e9af9cedada4",
                            Genre = "7",
                            ISBN = "9783522503242",
                            Title = "0c082423-8389-406c-9ad7-e9af9cedada4"
                        },
                        new
                        {
                            Id = new Guid("e16a06b6-ead4-4c42-9cdf-d306d88984c6"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "e16a06b6-ead4-4c42-9cdf-d306d88984c6",
                            Genre = "8",
                            ISBN = "9795932726593",
                            Title = "e16a06b6-ead4-4c42-9cdf-d306d88984c6"
                        },
                        new
                        {
                            Id = new Guid("bb09db73-1302-442a-8372-4fbbde185170"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "bb09db73-1302-442a-8372-4fbbde185170",
                            Genre = "9",
                            ISBN = "9792209970734",
                            Title = "bb09db73-1302-442a-8372-4fbbde185170"
                        },
                        new
                        {
                            Id = new Guid("7da07565-390f-402d-8e9c-740b03fa828f"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "7da07565-390f-402d-8e9c-740b03fa828f",
                            Genre = "0",
                            ISBN = "9785184685748",
                            Title = "7da07565-390f-402d-8e9c-740b03fa828f"
                        },
                        new
                        {
                            Id = new Guid("41c53d5a-bf3b-4324-a453-ba50960c88e0"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "41c53d5a-bf3b-4324-a453-ba50960c88e0",
                            Genre = "1",
                            ISBN = "9795475512790",
                            Title = "41c53d5a-bf3b-4324-a453-ba50960c88e0"
                        },
                        new
                        {
                            Id = new Guid("72344f4f-1242-48e6-8450-f625ddcffb3c"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "72344f4f-1242-48e6-8450-f625ddcffb3c",
                            Genre = "2",
                            ISBN = "9793256552867",
                            Title = "72344f4f-1242-48e6-8450-f625ddcffb3c"
                        },
                        new
                        {
                            Id = new Guid("a25ad456-345d-4426-8caa-97f6dd487264"),
                            AuthorId = new Guid("399bc81f-b2cb-45d3-a570-fe21db2d7db2"),
                            BookType = 0,
                            Description = "a25ad456-345d-4426-8caa-97f6dd487264",
                            Genre = "3",
                            ISBN = "9795203179615",
                            Title = "a25ad456-345d-4426-8caa-97f6dd487264"
                        },
                        new
                        {
                            Id = new Guid("04533550-af02-406d-b4c9-ccb61acd4cf8"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "04533550-af02-406d-b4c9-ccb61acd4cf8",
                            Genre = "4",
                            ISBN = "9793832285233",
                            Title = "04533550-af02-406d-b4c9-ccb61acd4cf8"
                        },
                        new
                        {
                            Id = new Guid("ae3c2891-5ff2-4a46-b53d-4031ee978147"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "ae3c2891-5ff2-4a46-b53d-4031ee978147",
                            Genre = "5",
                            ISBN = "9780881160970",
                            Title = "ae3c2891-5ff2-4a46-b53d-4031ee978147"
                        },
                        new
                        {
                            Id = new Guid("4aaf5b26-0683-4559-a747-fbd17620ae20"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "4aaf5b26-0683-4559-a747-fbd17620ae20",
                            Genre = "6",
                            ISBN = "9789291737758",
                            Title = "4aaf5b26-0683-4559-a747-fbd17620ae20"
                        },
                        new
                        {
                            Id = new Guid("04ea1062-1833-4f3f-bfc0-5e8d1fe98cdb"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "04ea1062-1833-4f3f-bfc0-5e8d1fe98cdb",
                            Genre = "7",
                            ISBN = "9789655837193",
                            Title = "04ea1062-1833-4f3f-bfc0-5e8d1fe98cdb"
                        },
                        new
                        {
                            Id = new Guid("8c3d3f81-7d05-4983-a611-26bbfc35aaa4"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "8c3d3f81-7d05-4983-a611-26bbfc35aaa4",
                            Genre = "8",
                            ISBN = "9784091062512",
                            Title = "8c3d3f81-7d05-4983-a611-26bbfc35aaa4"
                        },
                        new
                        {
                            Id = new Guid("227b862f-efb0-4f10-90c9-717c43026533"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "227b862f-efb0-4f10-90c9-717c43026533",
                            Genre = "9",
                            ISBN = "9789252722687",
                            Title = "227b862f-efb0-4f10-90c9-717c43026533"
                        },
                        new
                        {
                            Id = new Guid("2870af98-345a-469a-8e2a-943ce7960b4c"),
                            AuthorId = new Guid("42539d0c-0d8a-4c90-be9c-54c95a6a33e5"),
                            BookType = 0,
                            Description = "2870af98-345a-469a-8e2a-943ce7960b4c",
                            Genre = "0",
                            ISBN = "9781940747828",
                            Title = "2870af98-345a-469a-8e2a-943ce7960b4c"
                        },
                        new
                        {
                            Id = new Guid("5cb938bc-2fb2-4b57-a283-0ece3f3d543e"),
                            AuthorId = new Guid("399bc81f-b2cb-45d3-a570-fe21db2d7db2"),
                            BookType = 0,
                            Description = "5cb938bc-2fb2-4b57-a283-0ece3f3d543e",
                            Genre = "1",
                            ISBN = "9794001341200",
                            Title = "5cb938bc-2fb2-4b57-a283-0ece3f3d543e"
                        },
                        new
                        {
                            Id = new Guid("1e4972d2-e6ca-491d-b81a-7e452a90d4fa"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "1e4972d2-e6ca-491d-b81a-7e452a90d4fa",
                            Genre = "2",
                            ISBN = "9780414811805",
                            Title = "1e4972d2-e6ca-491d-b81a-7e452a90d4fa"
                        },
                        new
                        {
                            Id = new Guid("d8661c99-7162-4090-bfbc-c4b7cdf331f6"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "d8661c99-7162-4090-bfbc-c4b7cdf331f6",
                            Genre = "3",
                            ISBN = "9790451765092",
                            Title = "d8661c99-7162-4090-bfbc-c4b7cdf331f6"
                        },
                        new
                        {
                            Id = new Guid("3d9241ff-700f-4ea6-9d45-ebe975158758"),
                            AuthorId = new Guid("399bc81f-b2cb-45d3-a570-fe21db2d7db2"),
                            BookType = 0,
                            Description = "3d9241ff-700f-4ea6-9d45-ebe975158758",
                            Genre = "4",
                            ISBN = "9798722779007",
                            Title = "3d9241ff-700f-4ea6-9d45-ebe975158758"
                        },
                        new
                        {
                            Id = new Guid("9c758c56-e286-47cd-9b79-a2c85e1ef25d"),
                            AuthorId = new Guid("4095ad9d-4d25-496c-bd30-09b0754b00fc"),
                            BookType = 0,
                            Description = "9c758c56-e286-47cd-9b79-a2c85e1ef25d",
                            Genre = "5",
                            ISBN = "9783649230465",
                            Title = "9c758c56-e286-47cd-9b79-a2c85e1ef25d"
                        },
                        new
                        {
                            Id = new Guid("4144694d-f4dc-4f95-a3ed-353c85e3f9e2"),
                            AuthorId = new Guid("7d572d8e-05cd-4b31-87ee-e4af0951f754"),
                            BookType = 0,
                            Description = "4144694d-f4dc-4f95-a3ed-353c85e3f9e2",
                            Genre = "6",
                            ISBN = "9798438508052",
                            Title = "4144694d-f4dc-4f95-a3ed-353c85e3f9e2"
                        },
                        new
                        {
                            Id = new Guid("892767df-c7a4-4e15-a6d7-9c8422b10a14"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "892767df-c7a4-4e15-a6d7-9c8422b10a14",
                            Genre = "7",
                            ISBN = "9798313077727",
                            Title = "892767df-c7a4-4e15-a6d7-9c8422b10a14"
                        },
                        new
                        {
                            Id = new Guid("ebabba53-5279-4973-9b36-a21d8fbd770b"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "ebabba53-5279-4973-9b36-a21d8fbd770b",
                            Genre = "8",
                            ISBN = "9798279484164",
                            Title = "ebabba53-5279-4973-9b36-a21d8fbd770b"
                        },
                        new
                        {
                            Id = new Guid("bea7c631-5baa-4686-8add-346f03d475f7"),
                            AuthorId = new Guid("a03aed0f-1721-4232-96c5-fd05d3cfbbd6"),
                            BookType = 0,
                            Description = "bea7c631-5baa-4686-8add-346f03d475f7",
                            Genre = "9",
                            ISBN = "9795595889598",
                            Title = "bea7c631-5baa-4686-8add-346f03d475f7"
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.PermissionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Read"
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.UserAccessGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("GroupId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccessGroup");

                    b.HasData(
                        new
                        {
                            GroupId = 2,
                            UserId = new Guid("90be1435-66db-47a6-bb60-42fb6cfe41f9"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 2,
                            UserId = new Guid("f6b0bb72-25f5-4ed5-832c-6aaf43f574b9"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 2,
                            UserId = new Guid("19fa892d-dbd4-4571-b39e-2f8b844b7ef1"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 2,
                            UserId = new Guid("d623cbcf-2770-4942-865c-a559a8c8f9fb"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 2,
                            UserId = new Guid("3d1874e0-142e-4f4e-8377-de6098937963"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 1,
                            UserId = new Guid("27e299b2-4162-43f1-ad0c-e18298271e13"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            GroupId = 2,
                            UserId = new Guid("27e299b2-4162-43f1-ad0c-e18298271e13"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90be1435-66db-47a6-bb60-42fb6cfe41f9"),
                            Email = "90be1435-66db-47a6-bb60-42fb6cfe41f9@test.test",
                            PasswordHash = "AQAAAAIAAYagAAAAEJPkDUtEJ4go/Q7Ne9d5YpVFDBv+23dRpl/ax7oC+YLy73I/ICjX1TZG++tieQB5rA==",
                            UserName = "user0"
                        },
                        new
                        {
                            Id = new Guid("f6b0bb72-25f5-4ed5-832c-6aaf43f574b9"),
                            Email = "f6b0bb72-25f5-4ed5-832c-6aaf43f574b9@test.test",
                            PasswordHash = "AQAAAAIAAYagAAAAEAzvfUo9saKPQGEJsHM2cm1yX/JvvuGbOR50yQ9cCKUoDaD34TfkWXV4sv1GQQf9iA==",
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("19fa892d-dbd4-4571-b39e-2f8b844b7ef1"),
                            Email = "19fa892d-dbd4-4571-b39e-2f8b844b7ef1@test.test",
                            PasswordHash = "AQAAAAIAAYagAAAAEHJDeZJaPgrRavkRvBJiqNTSr4czD9i4NGfXP8U4e+9xUihpAb2nhU3WG1IM9MlwtQ==",
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("d623cbcf-2770-4942-865c-a559a8c8f9fb"),
                            Email = "d623cbcf-2770-4942-865c-a559a8c8f9fb@test.test",
                            PasswordHash = "AQAAAAIAAYagAAAAELEOhkn2sfldhX8eHFJu86JRXMDWtzo+azCvCnbbC8QhDa0V/jSKZjOnqC5n3wj/gw==",
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("3d1874e0-142e-4f4e-8377-de6098937963"),
                            Email = "3d1874e0-142e-4f4e-8377-de6098937963@test.test",
                            PasswordHash = "AQAAAAIAAYagAAAAEPGjqPg6gNsHiyTO+fos8/zh9hJVf5TWRtUG01tKnbiIeTDDxZi7zzKG86zndvFEzA==",
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("27e299b2-4162-43f1-ad0c-e18298271e13"),
                            Email = "admin@admin.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEN3l37k8RgULVNBvRD3KvYbPRgS3dX8oYXOPPAVkO/Ej2abEX2c7f4YvVyoHF+1erg==",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.AccessGroupPermission", b =>
                {
                    b.HasOne("Library.DataAccess.DataBase.Entities.AccessGroupEntity", "Group")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.DataAccess.DataBase.Entities.PermissionEntity", "Permission")
                        .WithMany("GroupPermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.BookEntity", b =>
                {
                    b.HasOne("Library.DataAccess.DataBase.Entities.AuthorEntity", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Library.DataAccess.DataBase.Entities.UserEntity", "User")
                        .WithMany("Books")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Author");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.RefreshToken", b =>
                {
                    b.HasOne("Library.DataAccess.DataBase.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.UserAccessGroup", b =>
                {
                    b.HasOne("Library.DataAccess.DataBase.Entities.AccessGroupEntity", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library.DataAccess.DataBase.Entities.UserEntity", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.AccessGroupEntity", b =>
                {
                    b.Navigation("GroupPermissions");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.AuthorEntity", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.PermissionEntity", b =>
                {
                    b.Navigation("GroupPermissions");
                });

            modelBuilder.Entity("Library.DataAccess.DataBase.Entities.UserEntity", b =>
                {
                    b.Navigation("Books");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
